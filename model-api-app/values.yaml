imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

replicaCount: 1

modelDownloader:
  image:
    registry: docker.io
    repository: afrozsh19/llm-model-download-container
    pullPolicy: IfNotPresent
    tag: "v0.0.1"

# This sets the container image for the inference container to be used
image:
  registry: docker.io
  repository: afrozsh19/model-serving-fastapi
  pullPolicy: IfNotPresent
  tag: "0.0.1"

model:
  name: "mistralai/Mistral-7B-v0.1"
  path: "models/mistralai-7b"
  bitAndBytes:
    enabled: false

pvc:
  name: "model-serving-fastapi"
  storageSize: 30Gi

logger:
  level: INFO

secret:
  enabled: true
  hfToken: "tokenForHuggingFace"

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: &servicePort 8000
  name: http
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

podAnnotations: {}

resources: 
  limits:
    cpu: 4
    memory: 30Gi
  requests:
    cpu: 2
    memory: 15Gi

livenessProbe:
  httpGet:
    path: /healthz
    port: 8000
  initialDelaySeconds: 60
  periodSeconds: 10
  failureThreshold: 3 

readinessProbe:
  httpGet: 
    path: /healthz
    port: 8000
  initialDelaySeconds: 60
  periodSeconds: 10
  failureThreshold: 3

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

prometheus:
  enabled: false
  path: "/metrics"
  port: 8000